name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linting-checks:
    name: "Linting checks"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run isort
        run: uv run isort --check .

      - name: Run black
        run: uv run black --check .

      - name: Run flake8
        run: uv run flake8

      - name: Run pylint
        run: uv run pylint **/*.py

  all-unit-tests:
    name: "All unit tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .[test]

      - name: Run all tests
        run: uv run pytest -rs -vv tests/
        env:
          POSTGRES_TEST_PORT: 5433
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_TEST_DB: ${{ secrets.TEST_POSTGRES_DB }}
          WAVE_API_KEY: ${{ secrets.WAVE_API_KEY }}
          ROOT_VALIDATOR_KEY: ${{ secrets.ROOT_VALIDATOR_KEY }}
